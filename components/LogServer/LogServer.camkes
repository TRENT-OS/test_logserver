/* 
 * Copyright (C) 2020-2024, HENSOLDT Cyber GmbH
 * 
 * SPDX-License-Identifier: GPL-2.0-or-later
 *
 * For commercial licensing, contact: info.cyber@hensoldt.net
 */

/**
 * @file
 * @brief    The log server under test.
 *
 * All client are connected to this server and are sending different log
 * entries.
 *
 * At somepoint the log server will finish its operation and will emit `finish`
 * event.
 *
 * @note    Please note that the name of the client corresponds to its
 *          configuration e.g. client "LVL_WARNING" has a filter on the
 *          server side set to the "WARNING" level, and the client
 *          "CL_FILTER_ERROR" has a filter set to the "ERROR" level on the
 *          client-side.
 */

/** @cond SKIP_IMPORTS */
import <if_OS_Storage.camkes>;
import <if_OS_Timer.camkes>;
import <if_OS_Logger.camkes>;
/** @endcond */

/** @hideinitializer */
component LogServer {
    control;

    dataport Buf                     buf_lvl_none_port;
    dataport Buf                     buf_lvl_max_port;
    dataport Buf                     buf_lvl_assert_port;
    dataport Buf                     buf_lvl_fatal_port;
    dataport Buf                     buf_lvl_error_port;
    dataport Buf                     buf_lvl_warning_port;
    dataport Buf                     buf_lvl_info_port;
    dataport Buf                     buf_lvl_debug_port;
    dataport Buf                     buf_lvl_trace_port;
    dataport Buf                     buf_lvl_custom_port;

    dataport Buf                     buf_no_filters_port;

    dataport Buf                     buf_cl_filter_none_port;
    dataport Buf                     buf_cl_filter_assert_port;
    dataport Buf                     buf_cl_filter_fatal_port;
    dataport Buf                     buf_cl_filter_error_port;
    dataport Buf                     buf_cl_filter_warning_port;
    dataport Buf                     buf_cl_filter_info_port;
    dataport Buf                     buf_cl_filter_debug_port;
    dataport Buf                     buf_cl_filter_trace_port;
    dataport Buf                     buf_cl_filter_custom_port;

    dataport Buf                     buf_logFileReader_port;
    dataport Buf                     buf_fileReaderWriter_port;

    emits    DataAvailableEvent      logServer_finish;

    provides if_OS_Logger            log_server_interface;

    consumes TimerReady              timeServer_notify;
    uses     if_OS_Timer             timeServer_rpc;

    uses     if_OS_Storage           storage_rpc;
    dataport Buf                     storage_port;
}
